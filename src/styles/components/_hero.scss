/* Hero section styles */
.hero {
  position: relative;
  background: var(--primary-color);
  color: white;
  overflow: hidden;
  
  /* Gradient overlay for hero images */
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7));
    z-index: 1;
  }
  
  &-content {
    position: relative;
    z-index: 2;
    max-width: 800px;
    margin: 0 auto;
    padding: 6rem var(--spacing-lg);
    text-align: center;
    
    @media (max-width: map-get($breakpoints, 'md')) {
      padding: 4rem var(--spacing-md);
    }
  }
  
  &-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }
  
  h1 {
    font-size: 3.5rem;
    margin-bottom: 0.5rem;
    
    @media (max-width: map-get($breakpoints, 'md')) {
      font-size: 2.5rem;
    }
    
    @media (max-width: map-get($breakpoints, 'sm')) {
      font-size: 2rem;
    }
  }
  
  h2 {
    font-size: 1.5rem;
    font-weight: var(--font-weight-normal);
    margin-bottom: var(--spacing-lg);
    color: rgba(255, 255, 255, 0.9);
    
    @media (max-width: map-get($breakpoints, 'sm')) {
      font-size: 1.25rem;
    }
  }
  
  p {
    font-size: 1.2rem;
    margin-bottom: var(--spacing-lg);
    
    @media (max-width: map-get($breakpoints, 'sm')) {
      font-size: 1rem;
    }
  }
  
  &-buttons {
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    
    @media (max-width: map-get($breakpoints, 'sm')) {
      flex-direction: column;
      align-items: center;
    }
  }
  
  .btn {
    min-width: 150px;
  }
}

/* Animated hero with subtle background animation */
.hero-animated {
  @extend .hero;
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 20%);
    animation: rotate 30s linear infinite;
    z-index: 1;
  }
  
  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}

/* Hero variant with shape divider */
.hero-wave {
  @extend .hero;
  
  .shape-divider {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    z-index: 2;
    
    svg {
      position: relative;
      display: block;
      width: calc(100% + 1.3px);
      height: 60px;
      
      @media (max-width: map-get($breakpoints, 'md')) {
        height: 40px;
      }
    }
    
    .shape-fill {
      fill: var(--bg-color);
    }
  }
}
